#include <iostream>
#include <string.h>
#include <typeinfo>
#include <stdexcept>
using namespace std;

class person_additional_info {
    char address[20], license[20], insurance[20];
    long int contact;

public:
    person_additional_info() {
        strcpy(address, "XYZ");
        strcpy(license, "XY-0000000000");
        strcpy(insurance, "XY00000000X");
        contact = 0;
    }

    ~person_additional_info() {
        cout << "I am in Destructor\n";
    }

    friend class person; // Declaration Friend class
};

class person {
    char name[20], dob[10], blood[10];
    float ht, wt;
    static int count; // Static variable
    person_additional_info *pai;

public:
    person() {
        strcpy(name, "XYZ");
        strcpy(dob, "dd/mm/yy");
        strcpy(blood, "A+");
        ht = 0;
        wt = 0;
        pai = new person_additional_info;
    }

    person(person *p1) {
        strcpy(name, p1->name);
        strcpy(dob, p1->dob);
        strcpy(blood, p1->blood);
        ht = p1->ht;
        wt = p1->wt;
        pai = new person_additional_info;
        strcpy(pai->address, p1->pai->address);
        strcpy(pai->license, p1->pai->license);
        strcpy(pai->insurance, p1->pai->insurance);
        pai->contact = p1->pai->contact;
    }

    static void showcount() {
        cout << "\nNo of records count = " << count << "\n";
    }

    ~person() {
        delete pai;
        cout << "\nI am in Destructor\n";
    }

    void getdata(char name[20]);
    inline void display();
};

void person::getdata(char name[20]) {
    strcpy(this->name, name);
    cout << "\nEnter date of birth: ";
    cin >> dob;
    cout << "\nEnter blood group: ";
    cin >> blood;
    cout << "\nEnter height: ";
    cin >> ht;

    try {
        if (ht < 4.5) {
            throw runtime_error("\nHeight should be greater than 4.5");
        }
    } catch (const exception &e) {
        cout << "Caught exception: " << e.what() << endl;
    }

    cout << "\nEnter weight: ";
    cin >> wt;
    cout << "\nEnter address: ";
    cin >> pai->address;
    cout << "\nEnter Licence number: ";
    cin >> pai->license;
    cout << "\nEnter Insurance policy number: ";
    cin >> pai->insurance;
    cout << "\nEnter Contact number: ";
    cin >> pai->contact;

    count++;
}

void person::display() {
    cout << "\t" << name;
    cout << "\t" << dob;
    cout << "\t" << blood;
    cout << "\t" << ht;
    cout << "\t" << wt;
    cout << "\t" << pai->address;
    cout << "\t" << pai->license;
    cout << "\t" << pai->insurance;
    cout << "\t" << pai->contact;
}

int person::count = 0; // Static variable definition and initialization

int main() {
    person *p1, *p2;
    int ch;
    p1 = new person;
    p2 = new person(p1);

    cout << "\tName\tDob\tBlood\tHt\tWt\tAddress\tLicense\tInsurance\tContact\n";
    cout << "Default Constructor Value \n";
    p1->display();
    cout << "\nCopy Constructor Value \n";
    p2->display();

    int n;
    cout << "\nEnter how many records you want: ";
    cin >> n;
    person p3[n];
    char name[20];
    int x = 0;

    do {
        cout << "\nWelcome to Personal Database System";
        cout << "\n1. Enter the record";
        cout << "\n2. Display the record";
        cout << "\n3. Exit";
        cin >> ch;

        switch (ch) {
        case 1: {
            cout << "\nEnter the Name: ";
            cin >> name;
            p3[x].getdata(name);
            person::showcount();
            x++;
            break;
        }
        case 2: {
            cout << "\tName\tDob\tBlood\tHt\tWt\tAddress\tLicense\tInsurance\tContact";
            for (int i = 0; i < n; i++) {
                cout << "\n";
                p3[i].display();
            }
            break;
        }
        }
    } while (ch != 3);

    delete p1;
    delete p2;

    return 0;
}
